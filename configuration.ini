# Configuration file for dwdforecast.py
[DWD]           
	# DWD Station Name / Number
    # Use : https://wettwarn.de/mosmix/mosmix.html to find closest station to you
    # 
    DWDStation = P0031

[SolarSystem]
    # GPS  Longitude of your solar system (use google maps etc. to find out)
    Longitute = 6.86
    # GPS  Latitude of your solar system (use google maps etc. to find out)
    Latitude = 51.4
    #Altitude [m] of your solar system´s location
    Altitude = 90
    # Elevation [Degrees]: Inclination angle of solar panels (0 degrees would be horizontal)
    Elevation = 40
    # Azimuth [Degrees] of your panels: Orientation - where 270=West, 180=South, 90=East
    Azimuth_1 = 101
    # NumPanels [int] Number of panels per string in the solar system
    NumPanels_1 = 7
    # Second set:
    Azimuth_2 = 281
    # NumPanels [int] Number of panels per string in the solar system
    NumPanels_2 = 8
    # NumStrings [int] Number of strings in the solar system
    # Albedo of your surrondind SolarSystem´s environment [%] with 100% = 1
    # Please see below for typical values:
    # https://pvpmc.sandia.gov/model…-ground-reflected/albedo/
    Albedo = 0.14
    # TEMPERATURE_MODEL_PARAMETERS valid parameters are:
    # open_rack_glass_glass
    # close_mount_glass_glass
    # open_rack_glass_polymer
    # insulated_back_glass_polymer
    # Please also see the pvlib documentation: https://pvlib-python.readthedocs.io/en/stable/api.html?highlight=TEMPERATURE_MODEL_PARAMETERS#pvlib.temperature.TEMPERATURE_MODEL_PARAMETERS
    # Closest match for roof mounted systems seem to be the open_rack ones:
    TEMPERATURE_MODEL = open_rack_glass_polymer
    #
    # InverterName [string] - Name of the inverter of your solar system
    # Caution: special characters need to be replaced with underscores
    # CSV file used by pvlib can be found in your python installation
    # e.g: /usr/local/lib/python3.5/dist-packages/pvlib/data
    # in sam-library-cec-inverters-2019-03-05.csv
    # So Map from name in CSV file 
    # SMA America: SB10000TL-US [240V]
    # To 
    # SMA_America__SB10000TL_US__240V_
    # You can also create your own ones - but need to adjust csv file in pvlib installation
    # Kostal__Plenticore_plus_10
    #InverterName = Kostal__Plenticore_plus_10
    #InverterName = SMA_America__SB10000TL_US__240V_
    #InverterName = Kostal_Plenticore__Plus_4_2
    InverterName = Kostal_Solar_Electric__Piko_5_3_US
    
    # ModuleName [string] - Name of the solar modules of your solar system
    # Caution: special characters need to be replaced with underscores
    # CSV file used by pvlib can be found in your python installation
    # e.g: /usr/local/lib/python3.5/dist-packages/pvlib/data
    # in sam-library-cec-modules-2019-03-05.csv
    # So Map from name in CSV file 
    # LG Electronics Inc. LG335E1C-A5
    # To 
    # LG_Electronics_Inc__LG335E1C_A5
    ModuleName = LG_Electronics_Inc__LG355N1C_V5
    #MyTimezone [string] - Timezone of DWD data: GMT 
    #https://pvlib-python.readthedocs.io/en/stable/timetimezones.html
    MyTimezone = UTC
    #
    #SimpleMultiplicationFactor [real]
    #A Factor that gets used to convert Rad1wh values to actual Powergen values (Rad1wh --> Rad1Energy)
    #Note: SimpleMultiplicationFactor is only being used for an approximate calculation that does not take azimuth - or elevation into account
    # SimpleMultiplicationFactor =  ModuleArea * ModuleEfficiency * InverterEfficiency
    # Modulearea [squaremeters] (e.g.)                  : 7 * 1*1.67 =  11.69
    # ModuleEfficiency (from Datasheet of your panel)   : 0.207
    # InverterEfficiency (from Inverter Datasheet)      : 0.98
    # SimpleMultiplicationFactor = 0.278 * 11.69 * 0.207 * 0.974 = 8.605184
    # For the above values - this results in SimpleMultiplicationFactor below:
    SimpleMultiplicationFactor = 0.6547
    #Temperatureoffset [real in °C] : an addition to the temperature input from DWDStation
    #Some users reported different actual temperatures whereas others were fine with the temperature values calculated by pvlib
    TemperatureOffset = 0
 

   
    
    
